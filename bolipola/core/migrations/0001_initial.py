# Generated by Django 4.2.4 on 2023-10-30 14:29

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(validators=[core.models.validate_today], verbose_name='Fecha del día')),
                ('availability', models.BooleanField(default=False, verbose_name='Dia disponible (no lo marques para reconocer que no esta disponible el día establecido)')),
            ],
            options={
                'verbose_name': 'Calendario',
                'verbose_name_plural': 'Calendarios',
                'db_table': 'calendario',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0, verbose_name='Total de productos')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('cost', models.FloatField(default=0, validators=[core.models.validate_positive], verbose_name='Costo de productos')),
            ],
            options={
                'verbose_name': 'Carrito',
                'verbose_name_plural': 'Carritos',
                'db_table': 'carrito',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('forOlder', models.BooleanField(verbose_name='Para mayores')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'categoria',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=50, verbose_name='Lugar de la reserva')),
                ('type', models.CharField(max_length=50, verbose_name='Tipo de reserva')),
                ('date', models.DateField(verbose_name='Dia de reserva')),
                ('start_time', models.TimeField(verbose_name='Hora de inicio')),
                ('end_time', models.TimeField(verbose_name='Hora de finalización')),
                ('cost', models.FloatField(verbose_name='Costo de la reserva')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Confirmado')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'db_table': 'reserva',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_cost', models.FloatField(validators=[core.models.validate_positive], verbose_name='Costo total')),
                ('payment_type', models.CharField(max_length=50, verbose_name='Tipo de pago')),
                ('status', models.CharField(default='En proceso...', max_length=50, verbose_name='Estado de venta')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('type', models.CharField(max_length=50, verbose_name='Tipo de venta')),
                ('product_quantity', models.PositiveIntegerField(verbose_name='Cantidad de productos comprados')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'db_table': 'venta',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Nombre')),
                ('color', models.CharField(max_length=20, verbose_name='Color')),
                ('players_num', models.PositiveIntegerField(default=0, verbose_name='Número de jugadores')),
                ('avatar', models.ImageField(default='group.png', upload_to='team_avatar/', verbose_name='Avatar')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Equipo',
                'verbose_name_plural': 'Equipos',
                'db_table': 'equipo',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Campeonato', max_length=30, verbose_name='Nombre')),
                ('number_teams', models.PositiveIntegerField(default=16, verbose_name='Cantidad de equipos permitidos')),
                ('date', models.DateTimeField(validators=[core.models.validate_date_with_2_days], verbose_name='Fecha de inicio del torneo')),
                ('prize_payment', models.FloatField(validators=[core.models.validate_positive], verbose_name='Pago de premio')),
                ('cost', models.FloatField(validators=[core.models.validate_positive], verbose_name='Costo de inscripción')),
                ('active', models.BooleanField(default=True, verbose_name='Torneo activo (no mover)')),
            ],
            options={
                'verbose_name': 'Torneo',
                'verbose_name_plural': 'Torneos',
                'db_table': 'torneo',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TournamentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals_for', models.PositiveIntegerField(default=0, verbose_name='Goles a favor')),
                ('goals_against', models.PositiveIntegerField(default=0, verbose_name='Goles en contra')),
                ('goals_diff', models.PositiveIntegerField(default=0, verbose_name='Diferencia de goles')),
                ('games_tied', models.PositiveIntegerField(default=0, verbose_name='Partidos empatados')),
                ('games_won', models.PositiveIntegerField(default=0, verbose_name='Partidos ganados')),
                ('games_lost', models.PositiveIntegerField(default=0, verbose_name='Partidos perdidos')),
                ('games_played', models.PositiveIntegerField(default=0, verbose_name='Partidos jugados')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Puntaje')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tournament')),
            ],
            options={
                'verbose_name': 'Torneo y equipo',
                'verbose_name_plural': 'Torneos y equipos',
                'db_table': 'torneo_equipo',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='tournament',
            name='team',
            field=models.ManyToManyField(through='core.TournamentTeam', to='core.team'),
        ),
        migrations.CreateModel(
            name='SaleTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sale')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tournament')),
            ],
            options={
                'verbose_name': 'Venta y torneo',
                'verbose_name_plural': 'Ventas y torneos',
                'db_table': 'venta_torneo',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SaleReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.reservation')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sale')),
            ],
            options={
                'verbose_name': 'Venta y reserva',
                'verbose_name_plural': 'Ventas y reservas',
                'db_table': 'venta_reserva',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SaleCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.car')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sale')),
            ],
            options={
                'verbose_name': 'Venta y carrito',
                'verbose_name_plural': 'Ventas y carritos',
                'db_table': 'venta_carrito',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='sale',
            name='car',
            field=models.ManyToManyField(through='core.SaleCar', to='core.car'),
        ),
        migrations.AddField(
            model_name='sale',
            name='reservation',
            field=models.ManyToManyField(through='core.SaleReservation', to='core.reservation'),
        ),
        migrations.AddField(
            model_name='sale',
            name='tournament',
            field=models.ManyToManyField(through='core.SaleTournament', to='core.tournament'),
        ),
        migrations.AddField(
            model_name='sale',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('cost', models.FloatField(validators=[core.models.validate_positive], verbose_name='Costo')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('image', models.ImageField(default='default_product.png', upload_to='product/', verbose_name='Imágen')),
                ('due_date', models.DateField(verbose_name='Fecha de vencimiento')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.category')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'producto',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=100, verbose_name='Apellido')),
                ('dorsal', models.PositiveBigIntegerField(verbose_name='Número de dorsal')),
                ('age', models.PositiveIntegerField(verbose_name='Edad')),
                ('gender', models.CharField(max_length=50, verbose_name='Género')),
                ('position', models.CharField(max_length=60, verbose_name='Posición')),
                ('yellow_card', models.IntegerField(default=0, verbose_name='Tarjeta amarilla')),
                ('blue_card', models.IntegerField(default=0, verbose_name='Tarjeta azul')),
                ('red_card', models.IntegerField(default=0, verbose_name='Tarjeta roja')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team')),
            ],
            options={
                'verbose_name': 'Jugador',
                'verbose_name_plural': 'Jugadores',
                'db_table': 'jugador',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Output',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de salida')),
                ('car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.car')),
            ],
            options={
                'verbose_name': 'Salida',
                'verbose_name_plural': 'Salidas',
                'db_table': 'salida',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de entrada')),
                ('product_quantity', models.PositiveIntegerField(default=0, validators=[core.models.validate_positive], verbose_name='Cantidad de producto')),
                ('quantity_reserved', models.PositiveIntegerField(default=0, verbose_name='Cantidad producto reservado')),
                ('disabled', models.BooleanField(default=False, verbose_name='Eliminado')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product')),
            ],
            options={
                'verbose_name': 'Inventario',
                'verbose_name_plural': 'Inventarios',
                'db_table': 'inventario',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(verbose_name='Puntuación')),
                ('text', models.TextField(verbose_name='Texto')),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
                'db_table': 'comentario',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CarInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Cantidad')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.car')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.inventory')),
            ],
            options={
                'verbose_name': 'Carrito e inventario',
                'verbose_name_plural': 'Carritos e inventario',
                'db_table': 'carrito_inventario',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='car',
            name='inventory',
            field=models.ManyToManyField(through='core.CarInventory', to='core.inventory'),
        ),
        migrations.AddField(
            model_name='car',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
